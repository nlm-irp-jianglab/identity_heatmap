{"version":3,"sources":["Heatmap.js","App.js","index.js"],"names":["Heatmap","matrixData","setMatrixData","useState","renamed","setRenamed","showUpper","setShowUpper","colorScheme","setColorScheme","fontSize","setFontSize","fontStyle","setFontStyle","filteredData","setFilteredData","margin","top","right","bottom","left","useEffect","getColorScale","useCallback","d3","domain","range","drawHeatmap","console","log","selectAll","remove","length","labels","slice","map","seq","values","row","svg","append","attr","concat","x","padding","y","colorScale","data","flatMap","i","val","j","value","enter","filter","d","bandwidth","style","text","toFixed","React","createElement","CSVReader","onFileLoaded","DragDropContext","onDragEnd","result","destination","reorderedData","movedRow","splice","source","index","Droppable","droppableId","provided","Object","assign","droppableProps","ref","innerRef","Draggable","key","draggableId","draggableProps","dragHandleProps","backgroundColor","cursor","type","onChange","e","renameSequence","original","newName","prev","_objectSpread","[object Object]","target","placeholder","onClick","sequence","indexToDelete","indexOf","updatedData","_","deleteColumn","id","App","csv","trim","split","line","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f2a6e2c.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport * as d3 from \"d3\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport CSVReader from 'react-csv-reader';\n\nconst Heatmap = () => {\n  const [matrixData, setMatrixData] = useState([]);\n  const [renamed, setRenamed] = useState({});\n  const [showUpper, setShowUpper] = useState(true);\n  const [colorScheme, setColorScheme] = useState(\"Viridis\");\n  const [fontSize, setFontSize] = useState(12);\n  const [fontStyle, setFontStyle] = useState(\"sans-serif\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  const width = 500;\n  const height = 500;\n  const margin = { top: 50, right: 80, bottom: 50, left: 100 };\n\n  useEffect(() => {\n    setFilteredData([...matrixData]);\n  }, [matrixData]);\n\n  const handleFileLoad = (data) => {\n    console.log(\"CSV Data Loaded:\", data);\n    setMatrixData(data);\n  };\n\n  // Rename sequences dynamically\n  const renameSequence = (original, newName) => {\n    setRenamed((prev) => ({ ...prev, [original]: newName }));\n  };\n\n  // Delete a row and corresponding column\n  const deleteColumn = (sequence) => {\n    const indexToDelete = filteredData[0].indexOf(sequence);\n    if (indexToDelete === -1) return;\n\n    const updatedData = filteredData\n      .map((row) => row.filter((_, index) => index !== indexToDelete))\n      .filter((_, index) => index !== indexToDelete);\n\n    setFilteredData(updatedData);\n  };\n\n  // Handle row reordering with drag-and-drop\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const reorderedData = [...filteredData];\n    const [movedRow] = reorderedData.splice(result.source.index + 1, 1); // Skip header row\n    reorderedData.splice(result.destination.index + 1, 0, movedRow); // Insert at new position\n    setFilteredData(reorderedData);\n  };\n\n  const getColorScale = useCallback(() => {\n    if (colorScheme === \"Gray\") {\n      return d3.scaleLinear().domain([0, 100]).range([\"#333333\", \"#ffffff\"]);\n    } else if (colorScheme === \"Blue\") {\n      return d3.scaleLinear().domain([0, 100]).range([\"#08306b\", \"#deebf7\"]);\n    } else {\n      return d3.scaleSequential(d3.interpolateViridis).domain([0, 100]);\n    }\n  }, [colorScheme]);\n\n  const drawHeatmap = useCallback(() => {\n    console.log(\"Drawing heatmap with data:\", filteredData);\n    d3.select(\"#heatmap\").selectAll(\"*\").remove();\n    if (!filteredData.length) return;\n\n    const labels = filteredData[0].slice(1).map((seq) => renamed[seq] || seq);\n    const values = filteredData.slice(1).map((row) => row.slice(1));\n\n    const svg = d3\n      .select(\"#heatmap\")\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    const x = d3.scaleBand().range([0, width]).domain(labels).padding(0.05);\n    const y = d3.scaleBand().range([0, height]).domain(labels).padding(0.05);\n    const colorScale = getColorScale();\n\n    svg\n      .selectAll()\n      .data(values.flatMap((row, i) =>\n        row.map((val, j) => ({ x: labels[j], y: labels[i], value: +val, i, j }))\n      ))\n      .enter()\n      .filter((d) => (showUpper ? d.i <= d.j : d.i >= d.j))\n      .append(\"rect\")\n      .attr(\"x\", (d) => x(d.x))\n      .attr(\"y\", (d) => y(d.y))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"height\", y.bandwidth())\n      .style(\"fill\", (d) => colorScale(d.value))\n      .style(\"stroke\", \"#fff\");\n\n    svg\n      .selectAll(\".text\")\n      .data(values.flatMap((row, i) =>\n        row.map((val, j) => ({ x: labels[j], y: labels[i], value: +val, i, j }))\n      ))\n      .enter()\n      .filter((d) => (showUpper ? d.i <= d.j : d.i >= d.j))\n      .append(\"text\")\n      .attr(\"x\", (d) => x(d.x) + x.bandwidth() / 2)\n      .attr(\"y\", (d) => y(d.y) + y.bandwidth() / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"fill\", \"black\")\n      .attr(\"font-size\", `${fontSize}px`)\n      .attr(\"font-family\", fontStyle)\n      .text((d) => d.value.toFixed(1));\n  }, [filteredData, renamed, showUpper, getColorScale, fontSize, fontStyle, margin]);\n\n  useEffect(() => {\n    drawHeatmap();\n  }, [drawHeatmap]);\n\n  return (\n    <div>\n      <h2>Pairwise Identity Heatmap</h2>\n      <CSVReader onFileLoaded={handleFileLoad} />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"rows\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {filteredData.slice(1).map((row, index) => (\n                <Draggable key={index} draggableId={`row-${index}`} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={{\n                        padding: \"5px\",\n                        margin: \"5px\",\n                        backgroundColor: \"#ddd\",\n                        cursor: \"grab\",\n                      }}\n                    >\n                      <input\n                        type=\"text\"\n                        value={renamed[row[0]] || row[0]}\n                        onChange={(e) => renameSequence(row[0], e.target.value)}\n                      />\n                      (Drag to reorder)\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <button onClick={() => setShowUpper(!showUpper)}>Toggle Upper/Lower Triangular View</button>\n      <button onClick={() => setColorScheme(\"Gray\")}>Gray</button>\n      <button onClick={() => setColorScheme(\"Blue\")}>Blue</button>\n      <button onClick={() => setColorScheme(\"Viridis\")}>Viridis</button>\n      <label>\n        Font Size:\n        <input type=\"number\" value={fontSize} onChange={(e) => setFontSize(e.target.value)} />\n      </label>\n      <label>\n        Font Style:\n        <select value={fontStyle} onChange={(e) => setFontStyle(e.target.value)}>\n          <option value=\"sans-serif\">Sans-serif</option>\n          <option value=\"serif\">Serif</option>\n          <option value=\"monospace\">Monospace</option>\n        </select>\n      </label>\n      <button onClick={() => deleteColumn(\"Some_Column\")}>Delete Column</button>\n      <div id=\"heatmap\"></div>\n    </div>\n  );\n};\n\nexport default Heatmap;\n","import React from \"react\";\nimport Heatmap from \"./Heatmap\";\n\nfunction App() {\n  const rawData = `\n    ,ABV59991.1,GCA_900167205.1_00702,GCA_005121165.3_00523,GCA_900167205.1_00778\n    ABV59991.1,100.0,14.0,17.8,15.1\n    GCA_900167205.1_00702,14.0,100.0,39.5,10.7\n    GCA_005121165.3_00523,17.8,39.5,100.0,9.6\n    GCA_900167205.1_00778,15.1,10.7,9.6,100.0\n  `;\n\n  const parseCSV = (csv) =>\n    csv.trim().split(\"\\n\").map((line) => line.split(\",\").map((val) => val.trim()));\n\n  return <Heatmap matrixData={parseCSV(rawData)} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\"; // Import styles\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}